{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, createVNode as _createVNode, vShow as _vShow, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"start _fullscreen\"\n};\nconst _hoisted_2 = {\n  class: \"start_inner\"\n};\nconst _hoisted_3 = {\n  class: \"start_inputbox\"\n};\nconst _hoisted_4 = {\n  class: \"start_inputbox_background\"\n};\nconst _hoisted_5 = {\n  class: \"start_inputbox_background_balls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createStaticVNode(\"<div class=\\\"start_background\\\" data-v-a9f3525e><svg class=\\\"start_background_line\\\" viewBox=\\\"0 0 50 50\\\" data-v-a9f3525e><circle class=\\\"_dashed\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"25\\\" vector-effect=\\\"non-scaling-stroke\\\" data-v-a9f3525e></circle></svg><svg class=\\\"start_background_line\\\" viewBox=\\\"0 0 50 50\\\" data-v-a9f3525e><circle class=\\\"_dashed\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"25\\\" vector-effect=\\\"non-scaling-stroke\\\" data-v-a9f3525e></circle></svg><div class=\\\"start_background_ball _middle_ball\\\" data-v-a9f3525e></div></div>\", 1)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", {\n    class: \"start_usetip _font_2\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.store.show_instrution && $setup.store.show_instrution(...args))\n  }, \"HOW TO PLAY?\"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"start_inputbox_input _font_4\",\n    type: \"text\",\n    placeholder: \"INPUT YOUR NAME\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.start.input_text.value = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.start.input_text.value]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(15, index => {\n    return _createElementVNode(\"div\", {\n      key: index\n    });\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(15, index => {\n    return _createElementVNode(\"div\", {\n      key: index\n    });\n  }), 64 /* STABLE_FRAGMENT */))])])])]), _createElementVNode(\"p\", {\n    class: \"start_startbtn _font_1\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.start.check_input && $setup.start.check_input(...args))\n  }, _cache[4] || (_cache[4] = [_createTextVNode(\" — Click the \"), _createElementVNode(\"span\", {\n    class: \"_font_1\"\n  }, \"Enter key\", -1 /* HOISTED */), _createTextVNode(\" to start — \")])), _createElementVNode(\"div\", {\n    class: \"start_closebtn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.store.start_to_welcome && $setup.store.start_to_welcome(...args))\n  }, [_createVNode($setup[\"Closebtn\"])])])], 512 /* NEED_PATCH */)), [[_vShow, $setup.start.if_visible.value]]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createStaticVNode","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","store","show_instrution","_hoisted_3","type","placeholder","$event","start","input_text","value","_hoisted_4","_hoisted_5","_Fragment","_renderList","index","key","check_input","_createTextVNode","start_to_welcome","_createVNode","if_visible"],"sources":["E:\\SnakeBall\\src\\components\\sections\\start.vue"],"sourcesContent":["<template>\r\n    <div class=\"start _fullscreen\" v-show=\"start.if_visible.value\">\r\n        <div class=\"start_background\">\r\n            <svg class=\"start_background_line\" viewBox=\"0 0 50 50\">\r\n                <circle class=\"_dashed\" cx=\"25\" cy=\"25\" r=\"25\" vector-effect=\"non-scaling-stroke\" />\r\n            </svg>\r\n            <svg class=\"start_background_line\" viewBox=\"0 0 50 50\">\r\n                <circle class=\"_dashed\" cx=\"25\" cy=\"25\" r=\"25\" vector-effect=\"non-scaling-stroke\" />\r\n            </svg>\r\n            <div class=\"start_background_ball _middle_ball\"></div>\r\n        </div>\r\n        <div class=\"start_inner\">\r\n            <p class=\"start_usetip _font_2\" @click=\"store.show_instrution\">HOW TO PLAY?</p>\r\n            <div class=\"start_inputbox\">\r\n                <input class=\"start_inputbox_input _font_4\" type=\"text\" placeholder=\"INPUT YOUR NAME\" v-model=\"start.input_text.value\" />\r\n                <div class=\"start_inputbox_background\">\r\n                    <div class=\"start_inputbox_background_balls\">\r\n                        <div>\r\n                            <div v-for=\"index in 15\" :key=\"index\"></div>\r\n                        </div>\r\n                        <div>\r\n                            <div v-for=\"index in 15\" :key=\"index\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p class=\"start_startbtn _font_1\" @click=\"start.check_input\">\r\n                — Click the\r\n                <span class=\"_font_1\">Enter key</span> to start —\r\n            </p>\r\n            <div class=\"start_closebtn\" @click=\"store.start_to_welcome\">\r\n                <Closebtn />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { global } from \"@/stores/global\";\r\nimport Closebtn from \"@/components/ui/closebtn.vue\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport gsap from \"gsap\";\r\nconst store = global();\r\nconst player = store.player;\r\n// start控制对象\r\nconst start = {\r\n    // DOM元素\r\n    container: null,\r\n    inputbox: null,\r\n    background: null,\r\n    usetip: null,\r\n    closebtn: null,\r\n    ball: null,\r\n    input: null,\r\n    //输入框文字\r\n    input_text: ref(\"\"),\r\n    max_text_length: 14, //最大可输入字符长度\r\n    animater: null, //动画播放器\r\n    if_visible: ref(false), //start是否可见\r\n    init() {\r\n        this.container = document.querySelector(\".start\");\r\n        this.inputbox = document.querySelector(\".start_inputbox\");\r\n        this.background = document.querySelector(\".start_background\");\r\n        this.usetip = document.querySelector(\".start_usetip\");\r\n        this.closebtn = document.querySelector(\".start_closebtn\");\r\n        this.ball = document.querySelector(\".start_background_ball\");\r\n        this.input = document.querySelector(\".start_inputbox_input\");\r\n        // 监听键盘按键\r\n        this.input.addEventListener(\"keyup\", (e) => {\r\n            // 裁剪限制字符数\r\n            if (this.input_text.value.length > this.max_text_length)\r\n                this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\r\n            // 点击enter，检查输入框是否进入游戏\r\n            else {\r\n                if (e.keyCode == 13) this.check_input();\r\n            }\r\n        });\r\n    },\r\n    // 检查输入框内容\r\n    check_input() {\r\n        // 规范输入内容：玩家可能用特殊方式更改输入内容，故在检查之前再裁剪一下\r\n        this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\r\n        let input_text = this.input_text.value.trim();\r\n        // 检查输入框内容规范后是否为空字符\r\n        if (input_text.length) {\r\n            // 不为空则初始化玩家信息，开始游戏\r\n            store.init_player_data(input_text);\r\n            store.start_new_game();\r\n        } else {\r\n            // 为空则进行提示\r\n            this.input_text.value = \"\"; //清空输入框\r\n            store.audio_controller.warn.play(); //播放警示音\r\n            // 小球警示样式\r\n            gsap.timeline()\r\n                .set(this.ball, {\r\n                    backgroundColor: \"#b80808\",\r\n                })\r\n                .set(\r\n                    this.ball,\r\n                    {\r\n                        backgroundColor: \"\",\r\n                    },\r\n                    \"<0.8\"\r\n                );\r\n        }\r\n    },\r\n    // 重置start动画样式\r\n    reset() {\r\n        gsap.timeline()\r\n            .set(this.container, {\r\n                scale: 1,\r\n            })\r\n            .set(this.inputbox, {\r\n                clipPath: \"circle(0%)\",\r\n            })\r\n            .set(this.background, {\r\n                opacity: 0,\r\n            })\r\n            .set(this.usetip, {\r\n                transform: \"translateY(-50%)\",\r\n                opacity: 0,\r\n            })\r\n            .set(this.closebtn, {\r\n                transform: \"translateY(50%)\",\r\n                opacity: 0,\r\n            });\r\n    },\r\n    // 显示start\r\n    show() {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        this.reset(); //重置\r\n        this.if_visible.value = true; // 显示start\r\n        // 播放动画\r\n        this.animater = gsap\r\n            .timeline()\r\n            .to(this.inputbox, {\r\n                clipPath: \"circle(100%)\",\r\n                duration: 1.5,\r\n                ease: \"power3.out\",\r\n            })\r\n            .to(\r\n                this.background,\r\n                {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    ease: \"power3.out\",\r\n                },\r\n                \"<\"\r\n            )\r\n            .to(\r\n                [this.usetip, this.closebtn],\r\n                {\r\n                    transform: \"translateY(0%)\",\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    ease: \"power3.out\",\r\n                },\r\n                \"<\"\r\n            );\r\n    },\r\n    // 隐藏start\r\n    hidden(immediate, next) {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        if (immediate) immediate(); //存在立即执行代码，则立即执行\r\n        // 播放动画\r\n        this.animater = gsap.to(this.container, {\r\n            scale: 0,\r\n            duration: 0.8,\r\n            ease: \"power3.inOut\",\r\n            onComplete: () => {\r\n                this.input_text.value = \"\"; //清空输入框\r\n                this.if_visible.value = false; // 隐藏start\r\n                if (next) next(); //存在后续代码，则执行\r\n            },\r\n        });\r\n    },\r\n};\r\n// 储存全局功能函数\r\nstore.show_start = start.show.bind(start);\r\nstore.hidden_start = start.hidden.bind(start);\r\nonMounted(() => {\r\n    start.init();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.start {\r\n    --scale: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.start_background {\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.start_background_line {\r\n    position: absolute;\r\n    width: calc(var(--scale) * 50rem);\r\n    overflow: visible;\r\n    animation: start_background_line 2s var(--ease_out) infinite;\r\n}\r\n.start_background .start_background_line:nth-child(2) {\r\n    animation-delay: 1s;\r\n}\r\n@keyframes start_background_line {\r\n    0% {\r\n        transform: scale(1) rotate(0);\r\n    }\r\n    50% {\r\n        transform: scale(1.3) rotate(45deg);\r\n    }\r\n    100% {\r\n        transform: scale(1) rotate(0);\r\n    }\r\n}\r\n.start_background_line circle {\r\n    stroke: var(--color_front);\r\n    stroke-dasharray: 0 calc(var(--scale) * 1rem);\r\n}\r\n.start_background_ball {\r\n    position: absolute;\r\n    background-color: var(--color_front);\r\n    filter: blur(calc(var(--scale) * 0.8rem));\r\n}\r\n.start_inner {\r\n    flex-direction: column;\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(var(--scale) * 55rem);\r\n    height: calc(var(--scale) * 55rem);\r\n}\r\n.start_usetip {\r\n    position: absolute;\r\n    top: var(--margin_ball_y);\r\n    color: var(--color_back);\r\n    transition: color 0.5s var(--ease_out);\r\n    cursor: pointer;\r\n}\r\n@media (hover: hover) {\r\n    .start_usetip:hover {\r\n        color: var(--color_gray);\r\n    }\r\n}\r\n.start_inputbox {\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n.start_inputbox_input {\r\n    position: absolute;\r\n    text-align: center;\r\n    width: 80%;\r\n    color: var(--color_back);\r\n    background-color: #0000;\r\n    outline: none;\r\n    border: none;\r\n}\r\n.start_inputbox_background {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: calc(var(--scale) * 15rem);\r\n    mask-image: linear-gradient(0deg, #000, #0000 30%, #0000 70%, #000);\r\n    pointer-events: none;\r\n}\r\n.start_inputbox_background_balls {\r\n    position: absolute;\r\n    justify-content: end;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    mask-image: linear-gradient(90deg, #0000, #000000 30%, #000000 70%, #0000);\r\n    opacity: 0.3;\r\n    transition: opacity 0.5s var(--ease_out);\r\n}\r\n.start_inputbox_background_balls > div {\r\n    animation: start_inputbox_background_balls 2s linear infinite;\r\n}\r\n.start_inputbox_background_balls > div div {\r\n    width: calc(var(--scale) * 14rem);\r\n    height: calc(var(--scale) * 14rem);\r\n    border-radius: 100%;\r\n    border: calc(var(--scale) * 0.1rem) var(--color_back) solid;\r\n    margin-right: calc(var(--scale) * -10rem);\r\n}\r\n@media (hover: hover) {\r\n    .start_inputbox:hover .start_inputbox_background_balls {\r\n        opacity: 1;\r\n    }\r\n}\r\n@keyframes start_inputbox_background_balls {\r\n    0% {\r\n        transform: translateX();\r\n    }\r\n    100% {\r\n        transform: translateX(100%);\r\n    }\r\n}\r\n.start_startbtn {\r\n    position: absolute;\r\n    color: var(--color_gray);\r\n    transform: translateY(400%);\r\n    transition: color 0.5s var(--ease_out);\r\n    cursor: pointer;\r\n}\r\n.start_startbtn span {\r\n    color: var(--color_back);\r\n}\r\n@media (hover: hover) {\r\n    .start_startbtn:hover {\r\n        color: var(--color_back);\r\n    }\r\n}\r\n.start_closebtn {\r\n    position: absolute;\r\n    bottom: var(--margin_ball_y);\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EAUrBA,KAAK,EAAC;AAAa;;EAEfA,KAAK,EAAC;AAAgB;;EAElBA,KAAK,EAAC;AAA2B;;EAC7BA,KAAK,EAAC;AAAiC;;wCAf5DC,mBAAA,CAiCM,OAjCNC,UAiCM,G,0BAlCVC,kBAAA,ohBAWQC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFD,mBAAA,CAA+E;IAA5EJ,KAAK,EAAC,sBAAsB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,KAAK,CAACC,eAAe,IAArBF,MAAA,CAAAC,KAAK,CAACC,eAAe,IAAAH,IAAA;KAAE,cAAY,GAC3EJ,mBAAA,CAYM,OAZNQ,UAYM,G,gBAXFR,mBAAA,CAAyH;IAAlHJ,KAAK,EAAC,8BAA8B;IAACa,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,iBAAiB;IAdrG,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAc+GN,MAAA,CAAAO,KAAK,CAACC,UAAU,CAACC,KAAK,GAAAH,MAAA;iDAAtBN,MAAA,CAAAO,KAAK,CAACC,UAAU,CAACC,KAAK,E,GACrHd,mBAAA,CASM,OATNe,UASM,GARFf,mBAAA,CAOM,OAPNgB,UAOM,GANFhB,mBAAA,CAEM,e,cADFH,mBAAA,CAA4CoB,SAAA,QAlBxEC,WAAA,CAkBiD,EAAE,EAAXC,KAAK;WAAjBnB,mBAAA,CAA4C;MAAlBoB,GAAG,EAAED;IAAK;oCAExCnB,mBAAA,CAEM,e,cADFH,mBAAA,CAA4CoB,SAAA,QArBxEC,WAAA,CAqBiD,EAAE,EAAXC,KAAK;WAAjBnB,mBAAA,CAA4C;MAAlBoB,GAAG,EAAED;IAAK;0CAKpDnB,mBAAA,CAGI;IAHDJ,KAAK,EAAC,wBAAwB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAO,KAAK,CAACS,WAAW,IAAjBhB,MAAA,CAAAO,KAAK,CAACS,WAAW,IAAAjB,IAAA;gCA1BvEkB,gBAAA,CA0ByE,eAEzD,GAAAtB,mBAAA,CAAsC;IAAhCJ,KAAK,EAAC;EAAS,GAAC,WAAS,qBA5B/C0B,gBAAA,CA4BsD,cAC1C,E,IACAtB,mBAAA,CAEM;IAFDJ,KAAK,EAAC,gBAAgB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,KAAK,CAACiB,gBAAgB,IAAtBlB,MAAA,CAAAC,KAAK,CAACiB,gBAAgB,IAAAnB,IAAA;MACtDoB,YAAA,CAAYnB,MAAA,c,wCA9BeA,MAAA,CAAAO,KAAK,CAACa,UAAU,CAACX,KAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}