{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"rank_middle _middle_ball\"\n};\nconst _hoisted_2 = {\n  class: \"rank_middle_data\"\n};\nconst _hoisted_3 = {\n  class: \"_font_2\"\n};\nconst _hoisted_4 = {\n  class: \"rank_middle_data\"\n};\nconst _hoisted_5 = {\n  class: \"_font_2\"\n};\nconst _hoisted_6 = {\n  class: \"rank_middle_data\"\n};\nconst _hoisted_7 = {\n  class: \"_font_2\"\n};\nconst _hoisted_8 = {\n  class: \"rank_middle_data\"\n};\nconst _hoisted_9 = {\n  class: \"_font_2\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"rank_playerball_rank _font_5\"\n};\nconst _hoisted_12 = {\n  class: \"rank_playerball_name _font_1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"rank _fullscreen\", {\n      '_hidden': !$setup.rank.if_visible.value\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"_font_2\"\n  }, \"RANK\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($setup.players_data.length ? $setup.players_data[$setup.rank.current_index.value].rank : 'loading'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"p\", {\n    class: \"_font_2\"\n  }, \"SCORE\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.players_data.length ? $setup.players_data[$setup.rank.current_index.value].score : 'loading'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"p\", {\n    class: \"_font_2\"\n  }, \"LIVES\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($setup.players_data.length ? $setup.players_data[$setup.rank.current_index.value].lives : 'loading'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n    class: \"_font_2\"\n  }, \"WAVE\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_9, _toDisplayString($setup.players_data.length ? $setup.players_data[$setup.rank.current_index.value].wave : 'loading'), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n    class: \"rank_middle_closebtn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.rank.hidden && $setup.rank.hidden(...args))\n  }, [_createVNode($setup[\"Closebtn\"])])]), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(15, index => {\n    return _createElementVNode(\"div\", {\n      class: _normalizeClass([\"rank_playerball\", {\n        'rank_playerball_selected': index == $setup.rank.current_index.value + 1\n      }]),\n      key: index,\n      style: _normalizeStyle({\n        '--r': (15 - 1 - index) * 0.8 / 20 + 1\n      }),\n      onClick: $event => $setup.rank.current_index.value = index - 1\n    }, [_createElementVNode(\"p\", _hoisted_11, _toDisplayString($setup.players_data[index - 1] ? $setup.players_data[index - 1].rank > 99 ? '99+' : $setup.players_data[index - 1].rank : '?'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_12, _toDisplayString($setup.players_data[index - 1] ? $setup.players_data[index - 1].name : 'loading'), 1 /* TEXT */)], 14 /* CLASS, STYLE, PROPS */, _hoisted_10);\n  }), 64 /* STABLE_FRAGMENT */))], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","rank","if_visible","value","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","players_data","length","current_index","_hoisted_4","_hoisted_5","score","_hoisted_6","_hoisted_7","lives","_hoisted_8","_hoisted_9","wave","onClick","_cache","args","hidden","_createVNode","_Fragment","_renderList","index","key","style","_normalizeStyle","$event","_hoisted_11","_hoisted_12","name","_hoisted_10"],"sources":["E:\\SnakeBall\\src\\components\\sections\\rank.vue"],"sourcesContent":["<template>\r\n    <div class=\"rank _fullscreen\" :class=\"{'_hidden':!rank.if_visible.value}\">\r\n        <div class=\"rank_middle _middle_ball\">\r\n            <div class=\"rank_middle_data\">\r\n                <p class=\"_font_2\">RANK</p>\r\n                <p class=\"_font_2\">{{players_data.length?players_data[rank.current_index.value].rank:'loading'}}</p>\r\n            </div>\r\n            <div class=\"rank_middle_data\">\r\n                <p class=\"_font_2\">SCORE</p>\r\n                <p class=\"_font_2\">{{players_data.length?players_data[rank.current_index.value].score:'loading'}}</p>\r\n            </div>\r\n            <div class=\"rank_middle_data\">\r\n                <p class=\"_font_2\">LIVES</p>\r\n                <p class=\"_font_2\">{{players_data.length?players_data[rank.current_index.value].lives:'loading'}}</p>\r\n            </div>\r\n            <div class=\"rank_middle_data\">\r\n                <p class=\"_font_2\">WAVE</p>\r\n                <p class=\"_font_2\">{{players_data.length?players_data[rank.current_index.value].wave:'loading'}}</p>\r\n            </div>\r\n            <div class=\"rank_middle_closebtn\" @click=\"rank.hidden\">\r\n                <Closebtn />\r\n            </div>\r\n        </div>\r\n        <div\r\n            class=\"rank_playerball\"\r\n            v-for=\"index in 15\"\r\n            :key=\"index\"\r\n            :class=\"{'rank_playerball_selected':index==rank.current_index.value+1}\"\r\n            :style=\"{'--r': (15 - 1-index) * 0.8 / 20+1}\"\r\n            @click=\" rank.current_index.value = index-1\"\r\n        >\r\n            <p class=\"rank_playerball_rank _font_5\">{{players_data[index-1]?(players_data[index-1].rank > 99?'99+':players_data[index-1].rank):'?'}}</p>\r\n            <p class=\"rank_playerball_name _font_1\">{{players_data[index-1]?players_data[index-1].name:'loading'}}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { global } from \"@/stores/global\";\r\nimport Closebtn from \"@/components/ui/closebtn.vue\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport gsap from \"gsap\";\r\nimport { Engine, Bodies, Composite, Events, Body, Mouse, MouseConstraint } from \"matter-js\";\r\nconst store = global();\r\nconst player = store.player;\r\n// 进行排名展示的玩家数据\r\nconst players_data = ref([]);\r\n// rank控制对象\r\nconst rank = {\r\n    // DOM元素\r\n    container: null,\r\n    balls: null,\r\n    middle: null,\r\n    // matter配置项\r\n    engine: null, //引擎\r\n    world: null, //物理世界\r\n    edges: null, //物理世界里面的所有边界墙\r\n    if_run_engine: false, //是否运行引擎\r\n    //当前被选中展示的玩家index\r\n    current_index: ref(0),\r\n    animater: null, //动画播放器\r\n    if_visible: ref(false), //rank是否可见\r\n    init() {\r\n        this.create_engine();\r\n        this.container = document.querySelector(\".rank\");\r\n        this.balls = [...document.querySelectorAll(\".rank_playerball\")];\r\n        this.middle = document.querySelector(\".rank_middle\");\r\n        window.addEventListener(\"resize\", this.resize.bind(this));\r\n        // 创建中间球体的物理模型\r\n        this.create_bady(this.middle, true);\r\n    },\r\n    // 创建物理引擎\r\n    create_engine() {\r\n        this.engine = Engine.create({\r\n            constraintIterations: 1,\r\n        });\r\n        this.world = this.engine.world;\r\n    },\r\n    // 尺寸改变，重新生成所有物理模型以适配新的尺寸\r\n    resize() {\r\n        // 移除，并重新生成中间球体\r\n        Composite.remove(this.world, this.middle.body, false);\r\n        this.create_bady(this.middle, true);\r\n        //如果没有运行引擎的话，边界和小球是空的，不执行后续内容\r\n        if (!this.if_run_engine) return;\r\n        // 移除，并重新生成边界\r\n        Composite.remove(this.world, this.edges, false);\r\n        this.create_edges();\r\n        // 重新为所有小球绑定物理模型模拟\r\n        this.balls.forEach((ball) => {\r\n            Composite.remove(this.world, ball.body, false); //移除小球的物理模型\r\n            this.create_bady(ball); // 重新生成\r\n        });\r\n    },\r\n    // 创建边界墙\r\n    create_edges() {\r\n        this.edges = [];\r\n        // 获取视口宽高\r\n        const view_width = innerWidth;\r\n        const view_height = innerHeight;\r\n        // 创建视口边界 (下左右)：这里不设置顶部，因为小球会从顶部掉落进来\r\n        this.edges = [\r\n            Bodies.rectangle(view_width / 2, view_height + 5, view_width, 10, {\r\n                isStatic: true,\r\n            }), // 底部\r\n            Bodies.rectangle(-5, view_height / 2, 10, view_height, { isStatic: true }), // 左侧\r\n            Bodies.rectangle(view_width + 5, view_height / 2, 10, view_height, {\r\n                isStatic: true,\r\n            }), // 右侧\r\n        ];\r\n        // 将边界加入到物理世界\r\n        Composite.add(this.world, this.edges);\r\n    },\r\n    // 初始化所有小球\r\n    init_balls() {\r\n        this.balls.forEach((ball, index) => {\r\n            // 所有小球按序号从下往上，从左往右依次排列\r\n            let row = parseInt(index % 4);\r\n            let line = parseInt(index / 4);\r\n            ball.style.left = `${25 * row}%`;\r\n            ball.style.top = `${25 * line}%`;\r\n            // 生成小球的物理模型\r\n            this.create_bady(ball);\r\n        });\r\n    },\r\n    // 生成DOM元素的物理模型body\r\n    create_bady(ele, if_static = false) {\r\n        const rect = ele.getBoundingClientRect();\r\n        const body = Bodies.circle(\r\n            rect.left + rect.width / 2, //x位置\r\n            rect.top + rect.width / 2, //y位置\r\n            rect.width / 2, //半径\r\n            { isStatic: if_static } //球体是否静止:是否可以与其他模型发生碰撞\r\n        );\r\n        //将body和元素绑定，方便直接通过元素控制body\r\n        ele.body = body;\r\n        Composite.add(this.world, body); // 将body加入到物理世界\r\n    },\r\n    // 运行引擎\r\n    run_engine() {\r\n        // 引擎不能自动开关：所以用if_run_engine手动控制引擎开关\r\n        if (!this.if_run_engine) return;\r\n        Engine.update(this.engine); //更新引擎\r\n        // 将body物理模型的物理状态设置到DOM元素上\r\n        this.balls.forEach((ball) => {\r\n            // 小球小于一定速度则停止移动：停止设置transform，释放性能\r\n            if (ball.body.speed <= 0.2) return;\r\n            gsap.set(ball, {\r\n                left: `${ball.body.position.x - ball.offsetWidth / 2}px`,\r\n                top: `${ball.body.position.y - ball.offsetHeight / 2}px`,\r\n                rotate: `${ball.body.angle}deg`,\r\n            });\r\n        });\r\n        requestAnimationFrame(() => {\r\n            this.run_engine();\r\n        });\r\n    },\r\n    // 重置物理引擎和动画样式\r\n    reset() {\r\n        this.world.gravity.y = 1.5; //恢复物理世界重力\r\n        // 重新创建边界墙和所有小球的物理模型\r\n        this.create_edges();\r\n        this.init_balls();\r\n        // 运行引擎\r\n        this.if_run_engine = true;\r\n        this.run_engine();\r\n        gsap.set(this.container, {\r\n            clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\",\r\n        });\r\n    },\r\n    // 显示rank\r\n    show(immediate) {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        if (immediate) immediate(); //存在立即执行代码，则立即执行\r\n        this.get_rank_list();\r\n        this.reset(); //重置\r\n        this.if_visible.value = true; //显示rank\r\n        // 播放动画\r\n        this.animater = gsap.to(this.container, {\r\n            clipPath: \"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)\",\r\n            duration: 1,\r\n            ease: \"power3.inOut\",\r\n        });\r\n    },\r\n    // 隐藏rank\r\n    hidden() {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        //  移除底部边界，并加大重力，让所有小球掉下\r\n        Composite.remove(this.engine.world, this.edges, false);\r\n        this.world.gravity.y = innerHeight / 250; //根据屏幕高度设置重力，避免小球掉落太快或者太慢\r\n        // 播放动画\r\n        this.animater = gsap.to(this.container, {\r\n            clipPath: \"polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)\",\r\n            duration: 1,\r\n            ease: \"power3.inOut\",\r\n            onComplete: () => {\r\n                this.if_visible.value = false; //隐藏rank\r\n                this.if_run_engine = false; //停止引擎\r\n                // 移除所有小球的物理模型\r\n                this.balls.forEach((ball) => {\r\n                    Composite.remove(this.engine.world, ball.body, false);\r\n                });\r\n            },\r\n        });\r\n    },\r\n    // 获取所有玩家的排名名单\r\n    get_rank_list() {\r\n        // 更新默认显示的玩家index，默认选中第一名\r\n        this.current_index.value = 0;\r\n        (async () => {\r\n            const response = await fetch(\"https://put_your_server.com/api\");\r\n            players_data.value = await response.json();\r\n            // 为所有玩家添加排名参数\r\n            players_data.value.forEach((data, index) => {\r\n                data.rank = index + 1;\r\n            });\r\n            // 如果当前玩家的分数存在的话：查找其分数所对应的排名\r\n            if (player.score !== null) this.get_rank();\r\n        })();\r\n    },\r\n    // 获取玩家分数对应的排名\r\n    get_rank() {\r\n        let request = new XMLHttpRequest();\r\n        request.open(\"POST\", \"https://put_your_server.com/api\", true);\r\n        request.setRequestHeader(\"Content-type\", \"application/json\");\r\n        request.send(JSON.stringify({ score: player.score }));\r\n        request.onreadystatechange = () => {\r\n            if (request.status == 200 && request.readyState == 4) {\r\n                player.rank = JSON.parse(request.responseText).rank;\r\n                // 如果玩家在15名内：则默认选中玩家所对应的小球，优先显示玩家信息\r\n                if (player.rank <= 15) {\r\n                    this.current_index.value = player.rank - 1;\r\n                } else {\r\n                    // 如果玩家在15名外：则让最后一个小球显示玩家的对应信息\r\n                    players_data.value[players_data.value.length - 1] = {\r\n                        name: player.name,\r\n                        rank: player.rank,\r\n                        wave: player.wave,\r\n                        lives: player.lives,\r\n                        score: player.score,\r\n                    };\r\n                    // 同上，优先显示玩家信息\r\n                    this.current_index.value = players_data.value.length - 1;\r\n                }\r\n            }\r\n        };\r\n    },\r\n};\r\n// 储存全局功能函数\r\nstore.show_rank = () => {\r\n    // 这里将按钮音效播放放在show函数内部，是为了避免多次点击而多次播放音效的BUG\r\n    rank.show(() => {\r\n        store.audio_controller.button.play();\r\n    });\r\n};\r\nonMounted(() => {\r\n    rank.init();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.rank {\r\n    --scale: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: var(--color_back);\r\n    z-index: 1000;\r\n}\r\n.rank_middle {\r\n    flex-direction: column;\r\n    position: absolute;\r\n    align-items: center;\r\n}\r\n.rank_middle_data {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: calc(var(--scale) * 3rem);\r\n}\r\n.rank_middle .rank_middle_data:first-child {\r\n    margin-top: var(--margin_ball_y);\r\n}\r\n.rank_middle_data P:nth-child(1) {\r\n    color: var(--color_gray);\r\n}\r\n.rank_middle_data P:nth-child(2) {\r\n    color: var(--color_back);\r\n}\r\n.rank_middle_closebtn {\r\n    position: absolute;\r\n    bottom: var(--margin_ball_y);\r\n}\r\n.rank_playerball {\r\n    flex-direction: column;\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(var(--scale) * 25rem * var(--r));\r\n    height: calc(var(--scale) * 25rem * var(--r));\r\n    border-radius: 50%;\r\n    background-color: var(--color_gray);\r\n    overflow: hidden;\r\n    transition: background-color 0.5s var(--ease_out);\r\n    cursor: pointer;\r\n}\r\n.rank_playerball p {\r\n    color: var(--color_back);\r\n    transition: color 0.5s var(--ease_out);\r\n}\r\n.rank_playerball_rank {\r\n    font-family: title;\r\n    line-height: calc(var(--scale) * 13rem);\r\n}\r\n\r\n@media (hover: hover) {\r\n    .rank_playerball:hover p {\r\n        color: var(--color_front);\r\n    }\r\n}\r\n.rank_playerball_selected {\r\n    background-color: var(--color_front);\r\n}\r\n@media (hover: hover) {\r\n    .rank_playerball_selected:hover p {\r\n        color: var(--color_back);\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}