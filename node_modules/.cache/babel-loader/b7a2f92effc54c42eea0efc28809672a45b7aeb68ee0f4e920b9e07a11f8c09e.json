{"ast":null,"code":"import { global } from \"@/stores/global\";\nimport Closebtn from \"@/components/ui/closebtn.vue\";\nimport { onMounted, ref } from \"vue\";\nimport gsap from \"gsap\";\nexport default {\n  __name: 'start',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = global();\n    const player = store.player;\n    // start控制对象\n    const start = {\n      // DOM元素\n      container: null,\n      inputbox: null,\n      background: null,\n      usetip: null,\n      closebtn: null,\n      ball: null,\n      input: null,\n      //输入框文字\n      input_text: ref(\"\"),\n      max_text_length: 14,\n      //最大可输入字符长度\n      animater: null,\n      //动画播放器\n      if_visible: ref(false),\n      //start是否可见\n      init() {\n        this.container = document.querySelector(\".start\");\n        this.inputbox = document.querySelector(\".start_inputbox\");\n        this.background = document.querySelector(\".start_background\");\n        this.usetip = document.querySelector(\".start_usetip\");\n        this.closebtn = document.querySelector(\".start_closebtn\");\n        this.ball = document.querySelector(\".start_background_ball\");\n        this.input = document.querySelector(\".start_inputbox_input\");\n        // 监听键盘按键\n        this.input.addEventListener(\"keyup\", e => {\n          // 裁剪限制字符数\n          if (this.input_text.value.length > this.max_text_length) this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\n          // 点击enter，检查输入框是否进入游戏\n          else {\n            if (e.keyCode == 13) this.check_input();\n          }\n        });\n      },\n      // 检查输入框内容\n      check_input() {\n        // 规范输入内容：玩家可能用特殊方式更改输入内容，故在检查之前再裁剪一下\n        this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\n        let input_text = this.input_text.value.trim();\n        // 检查输入框内容规范后是否为空字符\n        if (input_text.length) {\n          // 不为空则初始化玩家信息，开始游戏\n          store.init_player_data(input_text);\n          store.start_new_game();\n        } else {\n          // 为空则进行提示\n          this.input_text.value = \"\"; //清空输入框\n          store.audio_controller.warn.play(); //播放警示音\n          // 小球警示样式\n          gsap.timeline().set(this.ball, {\n            backgroundColor: \"#b80808\"\n          }).set(this.ball, {\n            backgroundColor: \"\"\n          }, \"<0.8\");\n        }\n      },\n      // 重置start动画样式\n      reset() {\n        gsap.timeline().set(this.container, {\n          scale: 1\n        }).set(this.inputbox, {\n          clipPath: \"circle(0%)\"\n        }).set(this.background, {\n          opacity: 0\n        }).set(this.usetip, {\n          transform: \"translateY(-50%)\",\n          opacity: 0\n        }).set(this.closebtn, {\n          transform: \"translateY(50%)\",\n          opacity: 0\n        });\n      },\n      // 显示start\n      show() {\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\n        if (this.animater && this.animater.isActive()) return;\n        this.reset(); //重置\n        this.if_visible.value = true; // 显示start\n        // 播放动画\n        this.animater = gsap.timeline().to(this.inputbox, {\n          clipPath: \"circle(100%)\",\n          duration: 1.5,\n          ease: \"power3.out\"\n        }).to(this.background, {\n          opacity: 1,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"<\").to([this.usetip, this.closebtn], {\n          transform: \"translateY(0%)\",\n          opacity: 1,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"<\");\n      },\n      // 隐藏start\n      hidden(immediate, next) {\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\n        if (this.animater && this.animater.isActive()) return;\n        if (immediate) immediate(); //存在立即执行代码，则立即执行\n        // 播放动画\n        this.animater = gsap.to(this.container, {\n          scale: 0,\n          duration: 0.8,\n          ease: \"power3.inOut\",\n          onComplete: () => {\n            this.input_text.value = \"\"; //清空输入框\n            this.if_visible.value = false; // 隐藏start\n            if (next) next(); //存在后续代码，则执行\n          }\n        });\n      }\n    };\n    // 储存全局功能函数\n    store.show_start = start.show.bind(start);\n    store.hidden_start = start.hidden.bind(start);\n    onMounted(() => {\n      start.init();\n    });\n    const __returned__ = {\n      store,\n      player,\n      start,\n      get global() {\n        return global;\n      },\n      Closebtn,\n      onMounted,\n      ref,\n      get gsap() {\n        return gsap;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["global","Closebtn","onMounted","ref","gsap","store","player","start","container","inputbox","background","usetip","closebtn","ball","input","input_text","max_text_length","animater","if_visible","init","document","querySelector","addEventListener","e","value","length","slice","keyCode","check_input","trim","init_player_data","start_new_game","audio_controller","warn","play","timeline","set","backgroundColor","reset","scale","clipPath","opacity","transform","show","isActive","to","duration","ease","hidden","immediate","next","onComplete","show_start","bind","hidden_start"],"sources":["E:/SnakeBall/src/components/sections/start.vue"],"sourcesContent":["<template>\r\n    <div class=\"start _fullscreen\" v-show=\"start.if_visible.value\">\r\n        <div class=\"start_background\">\r\n            <svg class=\"start_background_line\" viewBox=\"0 0 50 50\">\r\n                <circle class=\"_dashed\" cx=\"25\" cy=\"25\" r=\"25\" vector-effect=\"non-scaling-stroke\" />\r\n            </svg>\r\n            <svg class=\"start_background_line\" viewBox=\"0 0 50 50\">\r\n                <circle class=\"_dashed\" cx=\"25\" cy=\"25\" r=\"25\" vector-effect=\"non-scaling-stroke\" />\r\n            </svg>\r\n            <div class=\"start_background_ball _middle_ball\"></div>\r\n        </div>\r\n        <div class=\"start_inner\">\r\n            <p class=\"start_usetip _font_2\" @click=\"store.show_instrution\">HOW TO PLAY?</p>\r\n            <div class=\"start_inputbox\">\r\n                <input class=\"start_inputbox_input _font_4\" type=\"text\" placeholder=\"INPUT YOUR NAME\" v-model=\"start.input_text.value\" />\r\n                <div class=\"start_inputbox_background\">\r\n                    <div class=\"start_inputbox_background_balls\">\r\n                        <div>\r\n                            <div v-for=\"index in 15\" :key=\"index\"></div>\r\n                        </div>\r\n                        <div>\r\n                            <div v-for=\"index in 15\" :key=\"index\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p class=\"start_startbtn _font_1\" @click=\"start.check_input\">\r\n                — Click the\r\n                <span class=\"_font_1\">Enter key</span> to start —\r\n            </p>\r\n            <div class=\"start_closebtn\" @click=\"store.start_to_welcome\">\r\n                <Closebtn />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { global } from \"@/stores/global\";\r\nimport Closebtn from \"@/components/ui/closebtn.vue\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport gsap from \"gsap\";\r\nconst store = global();\r\nconst player = store.player;\r\n// start控制对象\r\nconst start = {\r\n    // DOM元素\r\n    container: null,\r\n    inputbox: null,\r\n    background: null,\r\n    usetip: null,\r\n    closebtn: null,\r\n    ball: null,\r\n    input: null,\r\n    //输入框文字\r\n    input_text: ref(\"\"),\r\n    max_text_length: 14, //最大可输入字符长度\r\n    animater: null, //动画播放器\r\n    if_visible: ref(false), //start是否可见\r\n    init() {\r\n        this.container = document.querySelector(\".start\");\r\n        this.inputbox = document.querySelector(\".start_inputbox\");\r\n        this.background = document.querySelector(\".start_background\");\r\n        this.usetip = document.querySelector(\".start_usetip\");\r\n        this.closebtn = document.querySelector(\".start_closebtn\");\r\n        this.ball = document.querySelector(\".start_background_ball\");\r\n        this.input = document.querySelector(\".start_inputbox_input\");\r\n        // 监听键盘按键\r\n        this.input.addEventListener(\"keyup\", (e) => {\r\n            // 裁剪限制字符数\r\n            if (this.input_text.value.length > this.max_text_length)\r\n                this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\r\n            // 点击enter，检查输入框是否进入游戏\r\n            else {\r\n                if (e.keyCode == 13) this.check_input();\r\n            }\r\n        });\r\n    },\r\n    // 检查输入框内容\r\n    check_input() {\r\n        // 规范输入内容：玩家可能用特殊方式更改输入内容，故在检查之前再裁剪一下\r\n        this.input_text.value = this.input_text.value.slice(0, this.max_text_length);\r\n        let input_text = this.input_text.value.trim();\r\n        // 检查输入框内容规范后是否为空字符\r\n        if (input_text.length) {\r\n            // 不为空则初始化玩家信息，开始游戏\r\n            store.init_player_data(input_text);\r\n            store.start_new_game();\r\n        } else {\r\n            // 为空则进行提示\r\n            this.input_text.value = \"\"; //清空输入框\r\n            store.audio_controller.warn.play(); //播放警示音\r\n            // 小球警示样式\r\n            gsap.timeline()\r\n                .set(this.ball, {\r\n                    backgroundColor: \"#b80808\",\r\n                })\r\n                .set(\r\n                    this.ball,\r\n                    {\r\n                        backgroundColor: \"\",\r\n                    },\r\n                    \"<0.8\"\r\n                );\r\n        }\r\n    },\r\n    // 重置start动画样式\r\n    reset() {\r\n        gsap.timeline()\r\n            .set(this.container, {\r\n                scale: 1,\r\n            })\r\n            .set(this.inputbox, {\r\n                clipPath: \"circle(0%)\",\r\n            })\r\n            .set(this.background, {\r\n                opacity: 0,\r\n            })\r\n            .set(this.usetip, {\r\n                transform: \"translateY(-50%)\",\r\n                opacity: 0,\r\n            })\r\n            .set(this.closebtn, {\r\n                transform: \"translateY(50%)\",\r\n                opacity: 0,\r\n            });\r\n    },\r\n    // 显示start\r\n    show() {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        this.reset(); //重置\r\n        this.if_visible.value = true; // 显示start\r\n        // 播放动画\r\n        this.animater = gsap\r\n            .timeline()\r\n            .to(this.inputbox, {\r\n                clipPath: \"circle(100%)\",\r\n                duration: 1.5,\r\n                ease: \"power3.out\",\r\n            })\r\n            .to(\r\n                this.background,\r\n                {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    ease: \"power3.out\",\r\n                },\r\n                \"<\"\r\n            )\r\n            .to(\r\n                [this.usetip, this.closebtn],\r\n                {\r\n                    transform: \"translateY(0%)\",\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    ease: \"power3.out\",\r\n                },\r\n                \"<\"\r\n            );\r\n    },\r\n    // 隐藏start\r\n    hidden(immediate, next) {\r\n        // 动画播放器存在且正在播放动画：不执行函数，否则会因为动画冲突导致BUG\r\n        if (this.animater && this.animater.isActive()) return;\r\n        if (immediate) immediate(); //存在立即执行代码，则立即执行\r\n        // 播放动画\r\n        this.animater = gsap.to(this.container, {\r\n            scale: 0,\r\n            duration: 0.8,\r\n            ease: \"power3.inOut\",\r\n            onComplete: () => {\r\n                this.input_text.value = \"\"; //清空输入框\r\n                this.if_visible.value = false; // 隐藏start\r\n                if (next) next(); //存在后续代码，则执行\r\n            },\r\n        });\r\n    },\r\n};\r\n// 储存全局功能函数\r\nstore.show_start = start.show.bind(start);\r\nstore.hidden_start = start.hidden.bind(start);\r\nonMounted(() => {\r\n    start.init();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.start {\r\n    --scale: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.start_background {\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.start_background_line {\r\n    position: absolute;\r\n    width: calc(var(--scale) * 50rem);\r\n    overflow: visible;\r\n    animation: start_background_line 2s var(--ease_out) infinite;\r\n}\r\n.start_background .start_background_line:nth-child(2) {\r\n    animation-delay: 1s;\r\n}\r\n@keyframes start_background_line {\r\n    0% {\r\n        transform: scale(1) rotate(0);\r\n    }\r\n    50% {\r\n        transform: scale(1.3) rotate(45deg);\r\n    }\r\n    100% {\r\n        transform: scale(1) rotate(0);\r\n    }\r\n}\r\n.start_background_line circle {\r\n    stroke: var(--color_front);\r\n    stroke-dasharray: 0 calc(var(--scale) * 1rem);\r\n}\r\n.start_background_ball {\r\n    position: absolute;\r\n    background-color: var(--color_front);\r\n    filter: blur(calc(var(--scale) * 0.8rem));\r\n}\r\n.start_inner {\r\n    flex-direction: column;\r\n    position: absolute;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(var(--scale) * 55rem);\r\n    height: calc(var(--scale) * 55rem);\r\n}\r\n.start_usetip {\r\n    position: absolute;\r\n    top: var(--margin_ball_y);\r\n    color: var(--color_back);\r\n    transition: color 0.5s var(--ease_out);\r\n    cursor: pointer;\r\n}\r\n@media (hover: hover) {\r\n    .start_usetip:hover {\r\n        color: var(--color_gray);\r\n    }\r\n}\r\n.start_inputbox {\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n.start_inputbox_input {\r\n    position: absolute;\r\n    text-align: center;\r\n    width: 80%;\r\n    color: var(--color_back);\r\n    background-color: #0000;\r\n    outline: none;\r\n    border: none;\r\n}\r\n.start_inputbox_background {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: calc(var(--scale) * 15rem);\r\n    mask-image: linear-gradient(0deg, #000, #0000 30%, #0000 70%, #000);\r\n    pointer-events: none;\r\n}\r\n.start_inputbox_background_balls {\r\n    position: absolute;\r\n    justify-content: end;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    mask-image: linear-gradient(90deg, #0000, #000000 30%, #000000 70%, #0000);\r\n    opacity: 0.3;\r\n    transition: opacity 0.5s var(--ease_out);\r\n}\r\n.start_inputbox_background_balls > div {\r\n    animation: start_inputbox_background_balls 2s linear infinite;\r\n}\r\n.start_inputbox_background_balls > div div {\r\n    width: calc(var(--scale) * 14rem);\r\n    height: calc(var(--scale) * 14rem);\r\n    border-radius: 100%;\r\n    border: calc(var(--scale) * 0.1rem) var(--color_back) solid;\r\n    margin-right: calc(var(--scale) * -10rem);\r\n}\r\n@media (hover: hover) {\r\n    .start_inputbox:hover .start_inputbox_background_balls {\r\n        opacity: 1;\r\n    }\r\n}\r\n@keyframes start_inputbox_background_balls {\r\n    0% {\r\n        transform: translateX();\r\n    }\r\n    100% {\r\n        transform: translateX(100%);\r\n    }\r\n}\r\n.start_startbtn {\r\n    position: absolute;\r\n    color: var(--color_gray);\r\n    transform: translateY(400%);\r\n    transition: color 0.5s var(--ease_out);\r\n    cursor: pointer;\r\n}\r\n.start_startbtn span {\r\n    color: var(--color_back);\r\n}\r\n@media (hover: hover) {\r\n    .start_startbtn:hover {\r\n        color: var(--color_back);\r\n    }\r\n}\r\n.start_closebtn {\r\n    position: absolute;\r\n    bottom: var(--margin_ball_y);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}